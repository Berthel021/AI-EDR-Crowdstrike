name: AI-Threat-Detection-CrowdStrike-CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PYTHON_VERSION: "3.10"  # Using supported Python version
  MODEL_DIR: "models"     # Centralized model directory

jobs:
  train-models:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Verify Python
        run: |
          python --version
          pip --version
          
      - name: Create models directory
        run: mkdir -p ${{ env.MODEL_DIR }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Train Ransomware Model
        run: |
          python src/train_ransomware_model.py \
            --data cic-ids-2017 \
            --output ${{ env.MODEL_DIR }}/ransomware_model.pkl
        continue-on-error: true
          
      - name: Train DDoS Model
        run: |
          python src/train_ddos_model.py \
            --data cic-ddos-2019 \
            --output ${{ env.MODEL_DIR }}/ddos_model.pkl
        continue-on-error: true
          
      - name: Verify model files
        run: |
          echo "Checking for model files:"
          ls -la ${{ env.MODEL_DIR }}/
          [ -f "${{ env.MODEL_DIR }}/ransomware_model.pkl" ] || echo "Ransomware model missing"
          [ -f "${{ env.MODEL_DIR }}/ddos_model.pkl" ] || echo "DDoS model missing"
          [ -f "${{ env.MODEL_DIR }}/ransomware_model.pkl" ] && [ -f "${{ env.MODEL_DIR }}/ddos_model.pkl" ] || exit 1
          
      - name: Upload models
        uses: actions/upload-artifact@v4
        with:
          name: threat-models
          path: |
            ${{ env.MODEL_DIR }}/ransomware_model.pkl
            ${{ env.MODEL_DIR }}/ddos_model.pkl
          if-no-files-found: error
          retention-days: 3

  test-models:
    needs: train-models
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download models
        uses: actions/download-artifact@v4
        with:
          name: threat-models
          path: ${{ env.MODEL_DIR }}
          
      - name: Verify downloaded models
        run: |
          echo "Downloaded models:"
          ls -la ${{ env.MODEL_DIR }}/
          [ -f "${{ env.MODEL_DIR }}/ransomware_model.pkl" ] || exit 1
          [ -f "${{ env.MODEL_DIR }}/ddos_model.pkl" ] || exit 1
