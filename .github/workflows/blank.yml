name: AI-Threat-Detection-CrowdStrike-CICD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PYTHON_VERSION: "3.10"  # Using supported Python version
  MODEL_DIR: "models"     # Centralized model directory

jobs:
  train-models:
    runs-on: ubuntu-latest
    timeout-minutes: 30   # Prevent hanging
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Verify Python
        run: |
          python --version
          pip --version

      - name: Create models directory
        run: mkdir -p ${{ env.MODEL_DIR }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install scikit-learn==1.3.0 tensorflow==2.12.0  # Pinned stable versions

      - name: Download training data
        run: |
          mkdir -p data
          wget https://example.com/cic-ids-2017.csv -O data/cic-ids-2017.csv
          wget https://example.com/cic-ddos-2019.csv -O data/cic-ddos-2019.csv

      - name: Train Ransomware Model
        id: train-ransomware
        run: |
          python src/train_ransomware_model.py \
            --data data/cic-ids-2017.csv \
            --output ${{ env.MODEL_DIR }}/ransomware_model.pkl
        continue-on-error: true

      - name: Train DDoS Model
        id: train-ddos
        run: |
          python src/train_ddos_model.py \
            --data data/cic-ddos-2019.csv \
            --output ${{ env.MODEL_DIR }}/ddos_model.pkl
        continue-on-error: true

      - name: Check training results
        run: |
          echo "Training results:"
          echo "Ransomware model: ${{ steps.train-ransomware.outcome }}"
          echo "DDoS model: ${{ steps.train-ddos.outcome }}"
          
          if [ "${{ steps.train-ransomware.outcome }}" != "success" ] && [ "${{ steps.train-ddos.outcome }}" != "success" ]; then
            echo "Both models failed to train"
            exit 1
          elif [ "${{ steps.train-ransomware.outcome }}" != "success" ]; then
            echo "Warning: Ransomware model failed"
          elif [ "${{ steps.train-ddos.outcome }}" != "success" ]; then
            echo "Warning: DDoS model failed"
          fi

      - name: List model files
        run: ls -la ${{ env.MODEL_DIR }}

      - name: Upload models
        uses: actions/upload-artifact@v4
        with:
          name: threat-models
          path: ${{ env.MODEL_DIR }}/*.pkl
          if-no-files-found: warn
          retention-days: 3
